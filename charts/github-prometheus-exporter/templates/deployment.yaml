apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "github-prometheus-exporter.fullname" . }}
  labels:
    {{- include "github-prometheus-exporter.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "github-prometheus-exporter.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "github-prometheus-exporter.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "github-prometheus-exporter.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: metrics
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          env:
            - name: PORT
              value: "{{ .Values.service.port }}"
            - name: GITHUB_SCRAPE_INTERVAL
              value: "{{ .Values.scrapeInterval }}"
            - name: ENVIRONMENT
              value: "production"
            - name: PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.githubAuthentication.privateKey.secretKeyRef.secretName }}
                  key: {{ .Values.githubAuthentication.privateKey.secretKeyRef.key }}
            - name: APPLICATION_ID
              {{- if .Values.githubAuthentication.applicationId.secretKeyRef }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.githubAuthentication.applicationId.secretKeyRef.secretName }}
                  key: {{ .Values.githubAuthentication.applicationId.secretKeyRef.key }}
              {{- else }}
              value: "{{ .Values.githubAuthentication.applicationId.value }}"
              {{- end }}
            - name: INSTALLATION_ID
              {{- if .Values.githubAuthentication.installationId.secretKeyRef }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.githubAuthentication.installationId.secretKeyRef.secretName }}
                  key: {{ .Values.githubAuthentication.installationId.secretKeyRef.key }}
              {{- else }}
              value: "{{ .Values.githubAuthentication.installationId.value }}"
              {{- end }}
            - name: ORGANIZATION_ID
              {{- if .Values.githubAuthentication.organizationId.secretKeyRef }}
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.githubAuthentication.organizationId.secretKeyRef.secretName }}
                  key: {{ .Values.githubAuthentication.organizationId.secretKeyRef.key }}
              {{- else }}
              value: "{{ .Values.githubAuthentication.organizationId.value }}"
              {{- end }}
          livenessProbe:
            httpGet:
              path: /metrics
              port: metrics
          readinessProbe:
            httpGet:
              path: /metrics
              port: metrics
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
